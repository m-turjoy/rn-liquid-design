// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RowItem component Renders correctly it renders Default RowItem 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RowItem
    actualPageVisible={1}
    dropdownRowBackroundColor="#ffffff"
    dropdownRowBackroundColorActive="#f3f3f7"
    dropdownRowHeight={32}
    dropdownRowTextColor="#1b1b25"
    dropdownRowTextColorActive="#2dbecd"
    dropdownRowTextFontFamily="Lato-Regular"
    dropdownRowTextFontFamilyActive="Lato-Black"
    dropdownRowTextFontSize={14}
    dropdownRowWidth={140}
    hideItemsDropdown={[Function]}
    index={0}
    indexPressed={0}
    isItem={false}
    isPage={false}
    item={10}
    onItemRowPressed={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Styled(TouchableWithoutFeedback)
        onPress={[Function]}
      >
        <Styled(View)
          alignItems="flex-start"
          height={32}
          justifyContent="center"
          paddingLeft={25}
          width={140}
        >
          <Styled(Text)
            color="#1b1b25"
            fontFamily="Lato-Regular"
            fontSize={14}
          >
            10
          </Styled(Text)>
        </Styled(View)>
      </Styled(TouchableWithoutFeedback)>,
      "theme": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(View)
          alignItems="flex-start"
          height={32}
          justifyContent="center"
          paddingLeft={25}
          width={140}
        >
          <Styled(Text)
            color="#1b1b25"
            fontFamily="Lato-Regular"
            fontSize={14}
          >
            10
          </Styled(Text)>
        </Styled(View)>,
        "onPress": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alignItems": "flex-start",
          "backgroundColor": undefined,
          "children": <Styled(Text)
            color="#1b1b25"
            fontFamily="Lato-Regular"
            fontSize={14}
          >
            10
          </Styled(Text)>,
          "height": 32,
          "justifyContent": "center",
          "paddingLeft": 25,
          "width": 140,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": 10,
            "color": "#1b1b25",
            "fontFamily": "Lato-Regular",
            "fontSize": 14,
          },
          "ref": null,
          "rendered": 10,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Styled(TouchableWithoutFeedback)
          onPress={[Function]}
        >
          <Styled(View)
            alignItems="flex-start"
            height={32}
            justifyContent="center"
            paddingLeft={25}
            width={140}
          >
            <Styled(Text)
              color="#1b1b25"
              fontFamily="Lato-Regular"
              fontSize={14}
            >
              10
            </Styled(Text)>
          </Styled(View)>
        </Styled(TouchableWithoutFeedback)>,
        "theme": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(View)
            alignItems="flex-start"
            height={32}
            justifyContent="center"
            paddingLeft={25}
            width={140}
          >
            <Styled(Text)
              color="#1b1b25"
              fontFamily="Lato-Regular"
              fontSize={14}
            >
              10
            </Styled(Text)>
          </Styled(View)>,
          "onPress": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "flex-start",
            "backgroundColor": undefined,
            "children": <Styled(Text)
              color="#1b1b25"
              fontFamily="Lato-Regular"
              fontSize={14}
            >
              10
            </Styled(Text)>,
            "height": 32,
            "justifyContent": "center",
            "paddingLeft": 25,
            "width": 140,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 10,
              "color": "#1b1b25",
              "fontFamily": "Lato-Regular",
              "fontSize": 14,
            },
            "ref": null,
            "rendered": 10,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
