// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Collapsible Renders correctly it renders default Collapsible 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Collapsible
    collapsed={true}
    collapsedHeight={0}
    onAnimationEnd={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <AnimatedComponent
        onLayout={[Function]}
        style={Object {}}
      />,
      "pointerEvents": "none",
      "style": Object {
        "height": 0,
        "overflow": "hidden",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": undefined,
        "onLayout": [Function],
        "style": Object {},
      },
      "ref": [Function],
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <AnimatedComponent
          onLayout={[Function]}
          style={Object {}}
        />,
        "pointerEvents": "none",
        "style": Object {
          "height": 0,
          "overflow": "hidden",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
          "onLayout": [Function],
          "style": Object {},
        },
        "ref": [Function],
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
